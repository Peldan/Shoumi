{"id":"node_modules\\electron-log\\lib\\transports\\renderer-console.js","dependencies":[{"name":"C:\\Users\\arvid\\IdeaProjects\\Shoumi\\node_modules\\electron-log\\package.json","includedInParent":true,"mtime":1536319191247},{"name":"C:\\Users\\arvid\\IdeaProjects\\Shoumi\\package.json","includedInParent":true,"mtime":1537044159153},{"name":"electron","optional":true,"loc":{"line":5,"column":26},"parent":"C:\\Users\\arvid\\IdeaProjects\\Shoumi\\node_modules\\electron-log\\lib\\transports\\renderer-console.js","resolved":"C:\\Users\\arvid\\IdeaProjects\\Shoumi\\node_modules\\electron\\index.js"},{"name":"../format","loc":{"line":10,"column":21},"parent":"C:\\Users\\arvid\\IdeaProjects\\Shoumi\\node_modules\\electron-log\\lib\\transports\\renderer-console.js","resolved":"C:\\Users\\arvid\\IdeaProjects\\Shoumi\\node_modules\\electron-log\\lib\\format.js"}],"generated":{"js":"'use strict';\n\nvar BrowserWindow;\ntry {\n  BrowserWindow = require('electron').BrowserWindow;\n} catch (e) {\n  BrowserWindow = null;\n}\n\nvar format = require('../format');\n\ntransport.level  = BrowserWindow ? 'silly' : false;\ntransport.format = '[{h}:{i}:{s}.{ms}] {text}';\n\nmodule.exports = transport;\n\nfunction transport(msg) {\n  if (!BrowserWindow) return;\n\n  var text = format.format(msg, transport.format);\n  BrowserWindow.getAllWindows().forEach(function(wnd) {\n    wnd.webContents.send('__ELECTRON_LOG_RENDERER__', msg.level, text);\n  });\n}\n","map":{"mappings":[{"source":"node_modules\\electron-log\\lib\\transports\\renderer-console.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules\\electron-log\\lib\\transports\\renderer-console.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules\\electron-log\\lib\\transports\\renderer-console.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules\\electron-log\\lib\\transports\\renderer-console.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules\\electron-log\\lib\\transports\\renderer-console.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules\\electron-log\\lib\\transports\\renderer-console.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules\\electron-log\\lib\\transports\\renderer-console.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules\\electron-log\\lib\\transports\\renderer-console.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules\\electron-log\\lib\\transports\\renderer-console.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules\\electron-log\\lib\\transports\\renderer-console.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules\\electron-log\\lib\\transports\\renderer-console.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules\\electron-log\\lib\\transports\\renderer-console.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules\\electron-log\\lib\\transports\\renderer-console.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules\\electron-log\\lib\\transports\\renderer-console.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules\\electron-log\\lib\\transports\\renderer-console.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules\\electron-log\\lib\\transports\\renderer-console.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules\\electron-log\\lib\\transports\\renderer-console.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules\\electron-log\\lib\\transports\\renderer-console.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules\\electron-log\\lib\\transports\\renderer-console.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules\\electron-log\\lib\\transports\\renderer-console.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules\\electron-log\\lib\\transports\\renderer-console.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules\\electron-log\\lib\\transports\\renderer-console.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules\\electron-log\\lib\\transports\\renderer-console.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules\\electron-log\\lib\\transports\\renderer-console.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules\\electron-log\\lib\\transports\\renderer-console.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}}],"sources":{"node_modules\\electron-log\\lib\\transports\\renderer-console.js":"'use strict';\n\nvar BrowserWindow;\ntry {\n  BrowserWindow = require('electron').BrowserWindow;\n} catch (e) {\n  BrowserWindow = null;\n}\n\nvar format = require('../format');\n\ntransport.level  = BrowserWindow ? 'silly' : false;\ntransport.format = '[{h}:{i}:{s}.{ms}] {text}';\n\nmodule.exports = transport;\n\nfunction transport(msg) {\n  if (!BrowserWindow) return;\n\n  var text = format.format(msg, transport.format);\n  BrowserWindow.getAllWindows().forEach(function(wnd) {\n    wnd.webContents.send('__ELECTRON_LOG_RENDERER__', msg.level, text);\n  });\n}\n"},"lineCount":25}},"hash":"3d479f9d5d1d774608ccdbba4e675c1f","cacheData":{"env":{}}}