{"id":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","dependencies":[{"name":"C:\\Users\\arvid\\IdeaProjects\\Shoumi\\node_modules\\electron-updater\\package.json","includedInParent":true,"mtime":1536319191247},{"name":"C:\\Users\\arvid\\IdeaProjects\\Shoumi\\package.json","includedInParent":true,"mtime":1537044159153},{"name":"bluebird-lst","loc":{"line":10,"column":23},"parent":"C:\\Users\\arvid\\IdeaProjects\\Shoumi\\node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","resolved":"C:\\Users\\arvid\\IdeaProjects\\Shoumi\\node_modules\\bluebird-lst\\index.js"},{"name":"builder-util-runtime","loc":{"line":20,"column":23},"parent":"C:\\Users\\arvid\\IdeaProjects\\Shoumi\\node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","resolved":"C:\\Users\\arvid\\IdeaProjects\\Shoumi\\node_modules\\builder-util-runtime\\out\\index.js"},{"name":"semver","loc":{"line":30,"column":47},"parent":"C:\\Users\\arvid\\IdeaProjects\\Shoumi\\node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","resolved":"C:\\Users\\arvid\\IdeaProjects\\Shoumi\\node_modules\\electron-updater\\node_modules\\semver\\semver.js"},{"name":"url","loc":{"line":40,"column":23},"parent":"C:\\Users\\arvid\\IdeaProjects\\Shoumi\\node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","resolved":"C:\\Users\\arvid\\AppData\\Roaming\\npm\\node_modules\\parcel-bundler\\node_modules\\url\\url.js"},{"name":"../main","loc":{"line":50,"column":23},"parent":"C:\\Users\\arvid\\IdeaProjects\\Shoumi\\node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","resolved":"C:\\Users\\arvid\\IdeaProjects\\Shoumi\\node_modules\\electron-updater\\out\\main.js"},{"name":"./Provider","loc":{"line":60,"column":23},"parent":"C:\\Users\\arvid\\IdeaProjects\\Shoumi\\node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","resolved":"C:\\Users\\arvid\\IdeaProjects\\Shoumi\\node_modules\\electron-updater\\out\\providers\\Provider.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.computeReleaseNotes = computeReleaseNotes;\nexports.GitHubProvider = exports.BaseGitHubProvider = void 0;\n\nfunction _bluebirdLst() {\n  const data = require(\"bluebird-lst\");\n\n  _bluebirdLst = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _builderUtilRuntime() {\n  const data = require(\"builder-util-runtime\");\n\n  _builderUtilRuntime = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction semver() {\n  const data = _interopRequireWildcard(require(\"semver\"));\n\n  semver = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _url() {\n  const data = require(\"url\");\n\n  _url = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _main() {\n  const data = require(\"../main\");\n\n  _main = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _Provider() {\n  const data = require(\"./Provider\");\n\n  _Provider = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nconst hrefRegExp = /\\/tag\\/v?([^\\/]+)$/;\n\nclass BaseGitHubProvider extends _main().Provider {\n  constructor(options, defaultHost, executor) {\n    super(executor, false\n    /* because GitHib uses S3 */\n    );\n    this.options = options;\n    this.baseUrl = (0, _main().newBaseUrl)((0, _builderUtilRuntime().githubUrl)(options, defaultHost));\n    const apiHost = defaultHost === \"github.com\" ? \"api.github.com\" : defaultHost;\n    this.baseApiUrl = (0, _main().newBaseUrl)((0, _builderUtilRuntime().githubUrl)(options, apiHost));\n  }\n\n  computeGithubBasePath(result) {\n    // https://github.com/electron-userland/electron-builder/issues/1903#issuecomment-320881211\n    const host = this.options.host;\n    return host != null && host !== \"github.com\" && host !== \"api.github.com\" ? `/api/v3${result}` : result;\n  }\n\n}\n\nexports.BaseGitHubProvider = BaseGitHubProvider;\n\nclass GitHubProvider extends BaseGitHubProvider {\n  constructor(options, updater, executor) {\n    super(options, \"github.com\", executor);\n    this.options = options;\n    this.updater = updater;\n  }\n\n  getLatestVersion() {\n    var _this = this;\n\n    return (0, _bluebirdLst().coroutine)(function* () {\n      const cancellationToken = new (_builderUtilRuntime().CancellationToken)();\n      const feedXml = yield _this.httpRequest((0, _main().newUrlFromBase)(`${_this.basePath}.atom`, _this.baseUrl), {\n        accept: \"application/xml, application/atom+xml, text/xml, */*\"\n      }, cancellationToken);\n      const feed = (0, _builderUtilRuntime().parseXml)(feedXml);\n      let latestRelease = feed.element(\"entry\", false, `No published versions on GitHub`);\n      let version;\n\n      try {\n        if (_this.updater.allowPrerelease) {\n          // noinspection TypeScriptValidateJSTypes\n          version = latestRelease.element(\"link\").attribute(\"href\").match(hrefRegExp)[1];\n        } else {\n          version = yield _this.getLatestVersionString(cancellationToken);\n\n          for (const element of feed.getElements(\"entry\")) {\n            if (element.element(\"link\").attribute(\"href\").match(hrefRegExp)[1] === version) {\n              latestRelease = element;\n              break;\n            }\n          }\n        }\n      } catch (e) {\n        throw (0, _builderUtilRuntime().newError)(`Cannot parse releases feed: ${e.stack || e.message},\\nXML:\\n${feedXml}`, \"ERR_UPDATER_INVALID_RELEASE_FEED\");\n      }\n\n      if (version == null) {\n        throw (0, _builderUtilRuntime().newError)(`No published versions on GitHub`, \"ERR_UPDATER_NO_PUBLISHED_VERSIONS\");\n      }\n\n      const channelFile = (0, _main().getChannelFilename)((0, _main().getDefaultChannelName)());\n      const channelFileUrl = (0, _main().newUrlFromBase)(_this.getBaseDownloadPath(version, channelFile), _this.baseUrl);\n\n      const requestOptions = _this.createRequestOptions(channelFileUrl);\n\n      let rawData;\n\n      try {\n        rawData = yield _this.executor.request(requestOptions, cancellationToken);\n      } catch (e) {\n        if (!_this.updater.allowPrerelease && e instanceof _builderUtilRuntime().HttpError && e.statusCode === 404) {\n          throw (0, _builderUtilRuntime().newError)(`Cannot find ${channelFile} in the latest release artifacts (${channelFileUrl}): ${e.stack || e.message}`, \"ERR_UPDATER_CHANNEL_FILE_NOT_FOUND\");\n        }\n\n        throw e;\n      }\n\n      const result = (0, _Provider().parseUpdateInfo)(rawData, channelFile, channelFileUrl);\n\n      if ((0, _main().isUseOldMacProvider)()) {\n        result.releaseJsonUrl = `${(0, _builderUtilRuntime().githubUrl)(_this.options)}/${requestOptions.path}`;\n      }\n\n      if (result.releaseName == null) {\n        result.releaseName = latestRelease.elementValueOrEmpty(\"title\");\n      }\n\n      if (result.releaseNotes == null) {\n        result.releaseNotes = computeReleaseNotes(_this.updater.currentVersion, _this.updater.fullChangelog, feed, latestRelease);\n      }\n\n      return result;\n    })();\n  }\n\n  getLatestVersionString(cancellationToken) {\n    var _this2 = this;\n\n    return (0, _bluebirdLst().coroutine)(function* () {\n      const options = _this2.options; // do not use API for GitHub to avoid limit, only for custom host or GitHub Enterprise\n\n      const url = options.host == null || options.host === \"github.com\" ? (0, _main().newUrlFromBase)(`${_this2.basePath}/latest`, _this2.baseUrl) : new (_url().URL)(`${_this2.computeGithubBasePath(`/repos/${options.owner}/${options.repo}/releases`)}/latest`, _this2.baseApiUrl);\n\n      try {\n        const rawData = yield _this2.httpRequest(url, {\n          Accept: \"application/json\"\n        }, cancellationToken);\n\n        if (rawData == null) {\n          return null;\n        }\n\n        const releaseInfo = JSON.parse(rawData);\n        return releaseInfo.tag_name.startsWith(\"v\") ? releaseInfo.tag_name.substring(1) : releaseInfo.tag_name;\n      } catch (e) {\n        throw (0, _builderUtilRuntime().newError)(`Unable to find latest version on GitHub (${url}), please ensure a production release exists: ${e.stack || e.message}`, \"ERR_UPDATER_LATEST_VERSION_NOT_FOUND\");\n      }\n    })();\n  }\n\n  get basePath() {\n    return `/${this.options.owner}/${this.options.repo}/releases`;\n  }\n\n  resolveFiles(updateInfo) {\n    // still replace space to - due to backward compatibility\n    return (0, _Provider().resolveFiles)(updateInfo, this.baseUrl, p => this.getBaseDownloadPath(updateInfo.version, p.replace(/ /g, \"-\")));\n  }\n\n  getBaseDownloadPath(version, fileName) {\n    return `${this.basePath}/download/${this.options.vPrefixedTagName === false ? \"\" : \"v\"}${version}/${fileName}`;\n  }\n\n}\n\nexports.GitHubProvider = GitHubProvider;\n\nfunction getNoteValue(parent) {\n  const result = parent.elementValueOrEmpty(\"content\"); // GitHub reports empty notes as <content>No content.</content>\n\n  return result === \"No content.\" ? \"\" : result;\n}\n\nfunction computeReleaseNotes(currentVersion, isFullChangelog, feed, latestRelease) {\n  if (!isFullChangelog) {\n    return getNoteValue(latestRelease);\n  }\n\n  const releaseNotes = [];\n\n  for (const release of feed.getElements(\"entry\")) {\n    // noinspection TypeScriptValidateJSTypes\n    const versionRelease = release.element(\"link\").attribute(\"href\").match(/\\/tag\\/v?([^\\/]+)$/)[1];\n\n    if (semver().lt(currentVersion, versionRelease)) {\n      releaseNotes.push({\n        version: versionRelease,\n        note: getNoteValue(release)\n      });\n    }\n  }\n\n  return releaseNotes.sort((a, b) => semver().rcompare(a.version, b.version));\n} \n//# sourceMappingURL=GitHubProvider.js.map","map":{"mappings":[{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}}],"sources":{"node_modules\\electron-updater\\out\\providers\\GitHubProvider.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.computeReleaseNotes = computeReleaseNotes;\nexports.GitHubProvider = exports.BaseGitHubProvider = void 0;\n\nfunction _bluebirdLst() {\n  const data = require(\"bluebird-lst\");\n\n  _bluebirdLst = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _builderUtilRuntime() {\n  const data = require(\"builder-util-runtime\");\n\n  _builderUtilRuntime = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction semver() {\n  const data = _interopRequireWildcard(require(\"semver\"));\n\n  semver = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _url() {\n  const data = require(\"url\");\n\n  _url = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _main() {\n  const data = require(\"../main\");\n\n  _main = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _Provider() {\n  const data = require(\"./Provider\");\n\n  _Provider = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nconst hrefRegExp = /\\/tag\\/v?([^\\/]+)$/;\n\nclass BaseGitHubProvider extends _main().Provider {\n  constructor(options, defaultHost, executor) {\n    super(executor, false\n    /* because GitHib uses S3 */\n    );\n    this.options = options;\n    this.baseUrl = (0, _main().newBaseUrl)((0, _builderUtilRuntime().githubUrl)(options, defaultHost));\n    const apiHost = defaultHost === \"github.com\" ? \"api.github.com\" : defaultHost;\n    this.baseApiUrl = (0, _main().newBaseUrl)((0, _builderUtilRuntime().githubUrl)(options, apiHost));\n  }\n\n  computeGithubBasePath(result) {\n    // https://github.com/electron-userland/electron-builder/issues/1903#issuecomment-320881211\n    const host = this.options.host;\n    return host != null && host !== \"github.com\" && host !== \"api.github.com\" ? `/api/v3${result}` : result;\n  }\n\n}\n\nexports.BaseGitHubProvider = BaseGitHubProvider;\n\nclass GitHubProvider extends BaseGitHubProvider {\n  constructor(options, updater, executor) {\n    super(options, \"github.com\", executor);\n    this.options = options;\n    this.updater = updater;\n  }\n\n  getLatestVersion() {\n    var _this = this;\n\n    return (0, _bluebirdLst().coroutine)(function* () {\n      const cancellationToken = new (_builderUtilRuntime().CancellationToken)();\n      const feedXml = yield _this.httpRequest((0, _main().newUrlFromBase)(`${_this.basePath}.atom`, _this.baseUrl), {\n        accept: \"application/xml, application/atom+xml, text/xml, */*\"\n      }, cancellationToken);\n      const feed = (0, _builderUtilRuntime().parseXml)(feedXml);\n      let latestRelease = feed.element(\"entry\", false, `No published versions on GitHub`);\n      let version;\n\n      try {\n        if (_this.updater.allowPrerelease) {\n          // noinspection TypeScriptValidateJSTypes\n          version = latestRelease.element(\"link\").attribute(\"href\").match(hrefRegExp)[1];\n        } else {\n          version = yield _this.getLatestVersionString(cancellationToken);\n\n          for (const element of feed.getElements(\"entry\")) {\n            if (element.element(\"link\").attribute(\"href\").match(hrefRegExp)[1] === version) {\n              latestRelease = element;\n              break;\n            }\n          }\n        }\n      } catch (e) {\n        throw (0, _builderUtilRuntime().newError)(`Cannot parse releases feed: ${e.stack || e.message},\\nXML:\\n${feedXml}`, \"ERR_UPDATER_INVALID_RELEASE_FEED\");\n      }\n\n      if (version == null) {\n        throw (0, _builderUtilRuntime().newError)(`No published versions on GitHub`, \"ERR_UPDATER_NO_PUBLISHED_VERSIONS\");\n      }\n\n      const channelFile = (0, _main().getChannelFilename)((0, _main().getDefaultChannelName)());\n      const channelFileUrl = (0, _main().newUrlFromBase)(_this.getBaseDownloadPath(version, channelFile), _this.baseUrl);\n\n      const requestOptions = _this.createRequestOptions(channelFileUrl);\n\n      let rawData;\n\n      try {\n        rawData = yield _this.executor.request(requestOptions, cancellationToken);\n      } catch (e) {\n        if (!_this.updater.allowPrerelease && e instanceof _builderUtilRuntime().HttpError && e.statusCode === 404) {\n          throw (0, _builderUtilRuntime().newError)(`Cannot find ${channelFile} in the latest release artifacts (${channelFileUrl}): ${e.stack || e.message}`, \"ERR_UPDATER_CHANNEL_FILE_NOT_FOUND\");\n        }\n\n        throw e;\n      }\n\n      const result = (0, _Provider().parseUpdateInfo)(rawData, channelFile, channelFileUrl);\n\n      if ((0, _main().isUseOldMacProvider)()) {\n        result.releaseJsonUrl = `${(0, _builderUtilRuntime().githubUrl)(_this.options)}/${requestOptions.path}`;\n      }\n\n      if (result.releaseName == null) {\n        result.releaseName = latestRelease.elementValueOrEmpty(\"title\");\n      }\n\n      if (result.releaseNotes == null) {\n        result.releaseNotes = computeReleaseNotes(_this.updater.currentVersion, _this.updater.fullChangelog, feed, latestRelease);\n      }\n\n      return result;\n    })();\n  }\n\n  getLatestVersionString(cancellationToken) {\n    var _this2 = this;\n\n    return (0, _bluebirdLst().coroutine)(function* () {\n      const options = _this2.options; // do not use API for GitHub to avoid limit, only for custom host or GitHub Enterprise\n\n      const url = options.host == null || options.host === \"github.com\" ? (0, _main().newUrlFromBase)(`${_this2.basePath}/latest`, _this2.baseUrl) : new (_url().URL)(`${_this2.computeGithubBasePath(`/repos/${options.owner}/${options.repo}/releases`)}/latest`, _this2.baseApiUrl);\n\n      try {\n        const rawData = yield _this2.httpRequest(url, {\n          Accept: \"application/json\"\n        }, cancellationToken);\n\n        if (rawData == null) {\n          return null;\n        }\n\n        const releaseInfo = JSON.parse(rawData);\n        return releaseInfo.tag_name.startsWith(\"v\") ? releaseInfo.tag_name.substring(1) : releaseInfo.tag_name;\n      } catch (e) {\n        throw (0, _builderUtilRuntime().newError)(`Unable to find latest version on GitHub (${url}), please ensure a production release exists: ${e.stack || e.message}`, \"ERR_UPDATER_LATEST_VERSION_NOT_FOUND\");\n      }\n    })();\n  }\n\n  get basePath() {\n    return `/${this.options.owner}/${this.options.repo}/releases`;\n  }\n\n  resolveFiles(updateInfo) {\n    // still replace space to - due to backward compatibility\n    return (0, _Provider().resolveFiles)(updateInfo, this.baseUrl, p => this.getBaseDownloadPath(updateInfo.version, p.replace(/ /g, \"-\")));\n  }\n\n  getBaseDownloadPath(version, fileName) {\n    return `${this.basePath}/download/${this.options.vPrefixedTagName === false ? \"\" : \"v\"}${version}/${fileName}`;\n  }\n\n}\n\nexports.GitHubProvider = GitHubProvider;\n\nfunction getNoteValue(parent) {\n  const result = parent.elementValueOrEmpty(\"content\"); // GitHub reports empty notes as <content>No content.</content>\n\n  return result === \"No content.\" ? \"\" : result;\n}\n\nfunction computeReleaseNotes(currentVersion, isFullChangelog, feed, latestRelease) {\n  if (!isFullChangelog) {\n    return getNoteValue(latestRelease);\n  }\n\n  const releaseNotes = [];\n\n  for (const release of feed.getElements(\"entry\")) {\n    // noinspection TypeScriptValidateJSTypes\n    const versionRelease = release.element(\"link\").attribute(\"href\").match(/\\/tag\\/v?([^\\/]+)$/)[1];\n\n    if (semver().lt(currentVersion, versionRelease)) {\n      releaseNotes.push({\n        version: versionRelease,\n        note: getNoteValue(release)\n      });\n    }\n  }\n\n  return releaseNotes.sort((a, b) => semver().rcompare(a.version, b.version));\n} \n//# sourceMappingURL=GitHubProvider.js.map"},"lineCount":239}},"hash":"5605cab5496b0544ba3a3c1e7dd47736","cacheData":{"env":{}}}