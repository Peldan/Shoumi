{"id":"node_modules\\electron-log\\main.js","dependencies":[{"name":"C:\\Users\\arvid\\IdeaProjects\\Shoumi\\node_modules\\electron-log\\package.json","includedInParent":true,"mtime":1536319191247},{"name":"C:\\Users\\arvid\\IdeaProjects\\Shoumi\\package.json","includedInParent":true,"mtime":1537044159153},{"name":"electron","optional":true,"loc":{"line":5,"column":21},"parent":"C:\\Users\\arvid\\IdeaProjects\\Shoumi\\node_modules\\electron-log\\main.js","resolved":"C:\\Users\\arvid\\IdeaProjects\\Shoumi\\node_modules\\electron\\index.js"},{"name":"./lib/log","loc":{"line":10,"column":39},"parent":"C:\\Users\\arvid\\IdeaProjects\\Shoumi\\node_modules\\electron-log\\main.js","resolved":"C:\\Users\\arvid\\IdeaProjects\\Shoumi\\node_modules\\electron-log\\lib\\log.js"},{"name":"./lib/transports/console","loc":{"line":11,"column":39},"parent":"C:\\Users\\arvid\\IdeaProjects\\Shoumi\\node_modules\\electron-log\\main.js","resolved":"C:\\Users\\arvid\\IdeaProjects\\Shoumi\\node_modules\\electron-log\\lib\\transports\\console.js"},{"name":"./lib/transports/file","loc":{"line":12,"column":39},"parent":"C:\\Users\\arvid\\IdeaProjects\\Shoumi\\node_modules\\electron-log\\main.js","resolved":"C:\\Users\\arvid\\IdeaProjects\\Shoumi\\node_modules\\electron-log\\lib\\transports\\file\\index.js"},{"name":"./lib/transports/log-s","loc":{"line":13,"column":39},"parent":"C:\\Users\\arvid\\IdeaProjects\\Shoumi\\node_modules\\electron-log\\main.js","resolved":"C:\\Users\\arvid\\IdeaProjects\\Shoumi\\node_modules\\electron-log\\lib\\transports\\log-s.js"},{"name":"./lib/transports/renderer-console","loc":{"line":14,"column":39},"parent":"C:\\Users\\arvid\\IdeaProjects\\Shoumi\\node_modules\\electron-log\\main.js","resolved":"C:\\Users\\arvid\\IdeaProjects\\Shoumi\\node_modules\\electron-log\\lib\\transports\\renderer-console.js"}],"generated":{"js":"'use strict';\n\nvar electron;\ntry {\n  electron = require('electron');\n} catch (e) {\n  electron = null;\n}\n\nvar log                      = require('./lib/log');\nvar transportConsole         = require('./lib/transports/console');\nvar transportFile            = require('./lib/transports/file');\nvar transportLogS            = require('./lib/transports/log-s');\nvar transportRendererConsole = require('./lib/transports/renderer-console');\n\nvar transports = {\n  console: transportConsole,\n  file: transportFile,\n  logS: transportLogS,\n  rendererConsole: transportRendererConsole\n};\n\nmodule.exports = {\n  transports: transports,\n\n  error:   log.bind(null, transports, 'error'),\n  warn:    log.bind(null, transports, 'warn'),\n  info:    log.bind(null, transports, 'info'),\n  verbose: log.bind(null, transports, 'verbose'),\n  debug:   log.bind(null, transports, 'debug'),\n  silly:   log.bind(null, transports, 'silly'),\n  log:     log.bind(null, transports, 'info')\n};\n\nmodule.exports.default = module.exports;\n\nif (electron && electron.ipcMain) {\n  electron.ipcMain.on('__ELECTRON_LOG__', onRendererLog);\n  var appName = electron.app.getName();\n  if (appName !== 'Electron') {\n    transportFile.appName = appName;\n  }\n}\n\nfunction onRendererLog(event, data) {\n  if (Array.isArray(data)) {\n    data.unshift(transports);\n    log.apply(null, data);\n  }\n}\n","map":{"mappings":[{"source":"node_modules\\electron-log\\main.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules\\electron-log\\main.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules\\electron-log\\main.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules\\electron-log\\main.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules\\electron-log\\main.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules\\electron-log\\main.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules\\electron-log\\main.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules\\electron-log\\main.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules\\electron-log\\main.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules\\electron-log\\main.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules\\electron-log\\main.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules\\electron-log\\main.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules\\electron-log\\main.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules\\electron-log\\main.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules\\electron-log\\main.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules\\electron-log\\main.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules\\electron-log\\main.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules\\electron-log\\main.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules\\electron-log\\main.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules\\electron-log\\main.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules\\electron-log\\main.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules\\electron-log\\main.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules\\electron-log\\main.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules\\electron-log\\main.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules\\electron-log\\main.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules\\electron-log\\main.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules\\electron-log\\main.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules\\electron-log\\main.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules\\electron-log\\main.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules\\electron-log\\main.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules\\electron-log\\main.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules\\electron-log\\main.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules\\electron-log\\main.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules\\electron-log\\main.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules\\electron-log\\main.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules\\electron-log\\main.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules\\electron-log\\main.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules\\electron-log\\main.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules\\electron-log\\main.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules\\electron-log\\main.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules\\electron-log\\main.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules\\electron-log\\main.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules\\electron-log\\main.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules\\electron-log\\main.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules\\electron-log\\main.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules\\electron-log\\main.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules\\electron-log\\main.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules\\electron-log\\main.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules\\electron-log\\main.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules\\electron-log\\main.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules\\electron-log\\main.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}}],"sources":{"node_modules\\electron-log\\main.js":"'use strict';\n\nvar electron;\ntry {\n  electron = require('electron');\n} catch (e) {\n  electron = null;\n}\n\nvar log                      = require('./lib/log');\nvar transportConsole         = require('./lib/transports/console');\nvar transportFile            = require('./lib/transports/file');\nvar transportLogS            = require('./lib/transports/log-s');\nvar transportRendererConsole = require('./lib/transports/renderer-console');\n\nvar transports = {\n  console: transportConsole,\n  file: transportFile,\n  logS: transportLogS,\n  rendererConsole: transportRendererConsole\n};\n\nmodule.exports = {\n  transports: transports,\n\n  error:   log.bind(null, transports, 'error'),\n  warn:    log.bind(null, transports, 'warn'),\n  info:    log.bind(null, transports, 'info'),\n  verbose: log.bind(null, transports, 'verbose'),\n  debug:   log.bind(null, transports, 'debug'),\n  silly:   log.bind(null, transports, 'silly'),\n  log:     log.bind(null, transports, 'info')\n};\n\nmodule.exports.default = module.exports;\n\nif (electron && electron.ipcMain) {\n  electron.ipcMain.on('__ELECTRON_LOG__', onRendererLog);\n  var appName = electron.app.getName();\n  if (appName !== 'Electron') {\n    transportFile.appName = appName;\n  }\n}\n\nfunction onRendererLog(event, data) {\n  if (Array.isArray(data)) {\n    data.unshift(transports);\n    log.apply(null, data);\n  }\n}\n"},"lineCount":51}},"hash":"e61bfc99e0af81da1ba2adbaf001d4c2","cacheData":{"env":{}}}