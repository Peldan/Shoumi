{"id":"node_modules\\bluebird\\js\\release\\method.js","dependencies":[{"name":"C:\\Users\\arvid\\IdeaProjects\\Shoumi\\node_modules\\bluebird\\package.json","includedInParent":true,"mtime":1534849347949},{"name":"C:\\Users\\arvid\\IdeaProjects\\Shoumi\\package.json","includedInParent":true,"mtime":1537044159153},{"name":"./util","loc":{"line":4,"column":19},"parent":"C:\\Users\\arvid\\IdeaProjects\\Shoumi\\node_modules\\bluebird\\js\\release\\method.js","resolved":"C:\\Users\\arvid\\IdeaProjects\\Shoumi\\node_modules\\bluebird\\js\\release\\util.js"}],"generated":{"js":"\"use strict\";\nmodule.exports =\nfunction(Promise, INTERNAL, tryConvertToPromise, apiRejection, debug) {\nvar util = require(\"./util\");\nvar tryCatch = util.tryCatch;\n\nPromise.method = function (fn) {\n    if (typeof fn !== \"function\") {\n        throw new Promise.TypeError(\"expecting a function but got \" + util.classString(fn));\n    }\n    return function () {\n        var ret = new Promise(INTERNAL);\n        ret._captureStackTrace();\n        ret._pushContext();\n        var value = tryCatch(fn).apply(this, arguments);\n        var promiseCreated = ret._popContext();\n        debug.checkForgottenReturns(\n            value, promiseCreated, \"Promise.method\", ret);\n        ret._resolveFromSyncValue(value);\n        return ret;\n    };\n};\n\nPromise.attempt = Promise[\"try\"] = function (fn) {\n    if (typeof fn !== \"function\") {\n        return apiRejection(\"expecting a function but got \" + util.classString(fn));\n    }\n    var ret = new Promise(INTERNAL);\n    ret._captureStackTrace();\n    ret._pushContext();\n    var value;\n    if (arguments.length > 1) {\n        debug.deprecated(\"calling Promise.try with more than 1 argument\");\n        var arg = arguments[1];\n        var ctx = arguments[2];\n        value = util.isArray(arg) ? tryCatch(fn).apply(ctx, arg)\n                                  : tryCatch(fn).call(ctx, arg);\n    } else {\n        value = tryCatch(fn)();\n    }\n    var promiseCreated = ret._popContext();\n    debug.checkForgottenReturns(\n        value, promiseCreated, \"Promise.try\", ret);\n    ret._resolveFromSyncValue(value);\n    return ret;\n};\n\nPromise.prototype._resolveFromSyncValue = function (value) {\n    if (value === util.errorObj) {\n        this._rejectCallback(value.e, false);\n    } else {\n        this._resolveCallback(value, true);\n    }\n};\n};\n","map":{"mappings":[{"source":"node_modules\\bluebird\\js\\release\\method.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules\\bluebird\\js\\release\\method.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules\\bluebird\\js\\release\\method.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules\\bluebird\\js\\release\\method.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules\\bluebird\\js\\release\\method.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules\\bluebird\\js\\release\\method.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules\\bluebird\\js\\release\\method.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules\\bluebird\\js\\release\\method.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules\\bluebird\\js\\release\\method.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules\\bluebird\\js\\release\\method.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules\\bluebird\\js\\release\\method.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules\\bluebird\\js\\release\\method.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules\\bluebird\\js\\release\\method.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules\\bluebird\\js\\release\\method.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules\\bluebird\\js\\release\\method.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules\\bluebird\\js\\release\\method.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules\\bluebird\\js\\release\\method.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules\\bluebird\\js\\release\\method.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules\\bluebird\\js\\release\\method.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules\\bluebird\\js\\release\\method.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules\\bluebird\\js\\release\\method.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules\\bluebird\\js\\release\\method.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules\\bluebird\\js\\release\\method.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules\\bluebird\\js\\release\\method.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules\\bluebird\\js\\release\\method.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules\\bluebird\\js\\release\\method.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules\\bluebird\\js\\release\\method.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules\\bluebird\\js\\release\\method.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules\\bluebird\\js\\release\\method.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules\\bluebird\\js\\release\\method.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules\\bluebird\\js\\release\\method.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules\\bluebird\\js\\release\\method.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules\\bluebird\\js\\release\\method.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules\\bluebird\\js\\release\\method.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules\\bluebird\\js\\release\\method.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules\\bluebird\\js\\release\\method.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules\\bluebird\\js\\release\\method.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules\\bluebird\\js\\release\\method.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules\\bluebird\\js\\release\\method.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules\\bluebird\\js\\release\\method.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules\\bluebird\\js\\release\\method.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules\\bluebird\\js\\release\\method.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules\\bluebird\\js\\release\\method.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules\\bluebird\\js\\release\\method.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules\\bluebird\\js\\release\\method.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules\\bluebird\\js\\release\\method.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules\\bluebird\\js\\release\\method.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules\\bluebird\\js\\release\\method.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules\\bluebird\\js\\release\\method.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules\\bluebird\\js\\release\\method.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules\\bluebird\\js\\release\\method.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules\\bluebird\\js\\release\\method.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules\\bluebird\\js\\release\\method.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules\\bluebird\\js\\release\\method.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules\\bluebird\\js\\release\\method.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules\\bluebird\\js\\release\\method.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}}],"sources":{"node_modules\\bluebird\\js\\release\\method.js":"\"use strict\";\nmodule.exports =\nfunction(Promise, INTERNAL, tryConvertToPromise, apiRejection, debug) {\nvar util = require(\"./util\");\nvar tryCatch = util.tryCatch;\n\nPromise.method = function (fn) {\n    if (typeof fn !== \"function\") {\n        throw new Promise.TypeError(\"expecting a function but got \" + util.classString(fn));\n    }\n    return function () {\n        var ret = new Promise(INTERNAL);\n        ret._captureStackTrace();\n        ret._pushContext();\n        var value = tryCatch(fn).apply(this, arguments);\n        var promiseCreated = ret._popContext();\n        debug.checkForgottenReturns(\n            value, promiseCreated, \"Promise.method\", ret);\n        ret._resolveFromSyncValue(value);\n        return ret;\n    };\n};\n\nPromise.attempt = Promise[\"try\"] = function (fn) {\n    if (typeof fn !== \"function\") {\n        return apiRejection(\"expecting a function but got \" + util.classString(fn));\n    }\n    var ret = new Promise(INTERNAL);\n    ret._captureStackTrace();\n    ret._pushContext();\n    var value;\n    if (arguments.length > 1) {\n        debug.deprecated(\"calling Promise.try with more than 1 argument\");\n        var arg = arguments[1];\n        var ctx = arguments[2];\n        value = util.isArray(arg) ? tryCatch(fn).apply(ctx, arg)\n                                  : tryCatch(fn).call(ctx, arg);\n    } else {\n        value = tryCatch(fn)();\n    }\n    var promiseCreated = ret._popContext();\n    debug.checkForgottenReturns(\n        value, promiseCreated, \"Promise.try\", ret);\n    ret._resolveFromSyncValue(value);\n    return ret;\n};\n\nPromise.prototype._resolveFromSyncValue = function (value) {\n    if (value === util.errorObj) {\n        this._rejectCallback(value.e, false);\n    } else {\n        this._resolveCallback(value, true);\n    }\n};\n};\n"},"lineCount":56}},"hash":"6299f44335532406e6b123c7a88691a7","cacheData":{"env":{}}}