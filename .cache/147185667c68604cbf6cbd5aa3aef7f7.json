{"id":"node_modules\\electron-log\\renderer.js","dependencies":[{"name":"C:\\Users\\arvid\\IdeaProjects\\Shoumi\\node_modules\\electron-log\\package.json","includedInParent":true,"mtime":1536319191247},{"name":"C:\\Users\\arvid\\IdeaProjects\\Shoumi\\package.json","includedInParent":true,"mtime":1537044159153},{"name":"electron","optional":true,"loc":{"line":7,"column":24},"parent":"C:\\Users\\arvid\\IdeaProjects\\Shoumi\\node_modules\\electron-log\\renderer.js","resolved":"C:\\Users\\arvid\\IdeaProjects\\Shoumi\\node_modules\\electron\\index.js"},{"name":"./lib/original-console","loc":{"line":12,"column":30},"parent":"C:\\Users\\arvid\\IdeaProjects\\Shoumi\\node_modules\\electron-log\\renderer.js","resolved":"C:\\Users\\arvid\\IdeaProjects\\Shoumi\\node_modules\\electron-log\\lib\\original-console.js"}],"generated":{"js":"'use strict';\n\nmodule.exports = null;\n\nvar ipcRenderer;\ntry {\n  ipcRenderer = require('electron').ipcRenderer;\n} catch (e) {\n  ipcRenderer = null;\n}\n\nvar originalConsole = require('./lib/original-console');\n\nif (ipcRenderer) {\n  module.exports = {\n    error:   log.bind(null, 'error'),\n    warn:    log.bind(null, 'warn'),\n    info:    log.bind(null, 'info'),\n    verbose: log.bind(null, 'verbose'),\n    debug:   log.bind(null, 'debug'),\n    silly:   log.bind(null, 'silly'),\n    log:     log.bind(null, 'info')\n  };\n\n  module.exports.default = module.exports;\n\n  ipcRenderer.on('__ELECTRON_LOG_RENDERER__', function(event, level, data) {\n    if (level === 'verbose') {\n      level = 'log';\n    } else if (level === 'silly') {\n      level = 'debug';\n    }\n\n    originalConsole[level].apply(\n      originalConsole.context,\n      typeof data === 'string' ? [data] : data\n    );\n  });\n}\n\nfunction log() {\n  var data = Array.prototype.slice.call(arguments);\n\n  data = data.map(function(obj) {\n    if (obj instanceof Error) {\n      obj = obj.stack || obj;\n    }\n\n    return obj;\n  });\n\n  ipcRenderer.send('__ELECTRON_LOG__', data);\n}\n","map":{"mappings":[{"source":"node_modules\\electron-log\\renderer.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules\\electron-log\\renderer.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules\\electron-log\\renderer.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules\\electron-log\\renderer.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules\\electron-log\\renderer.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules\\electron-log\\renderer.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules\\electron-log\\renderer.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules\\electron-log\\renderer.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules\\electron-log\\renderer.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules\\electron-log\\renderer.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules\\electron-log\\renderer.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules\\electron-log\\renderer.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules\\electron-log\\renderer.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules\\electron-log\\renderer.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules\\electron-log\\renderer.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules\\electron-log\\renderer.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules\\electron-log\\renderer.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules\\electron-log\\renderer.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules\\electron-log\\renderer.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules\\electron-log\\renderer.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules\\electron-log\\renderer.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules\\electron-log\\renderer.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules\\electron-log\\renderer.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules\\electron-log\\renderer.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules\\electron-log\\renderer.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules\\electron-log\\renderer.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules\\electron-log\\renderer.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules\\electron-log\\renderer.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules\\electron-log\\renderer.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules\\electron-log\\renderer.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules\\electron-log\\renderer.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules\\electron-log\\renderer.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules\\electron-log\\renderer.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules\\electron-log\\renderer.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules\\electron-log\\renderer.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules\\electron-log\\renderer.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules\\electron-log\\renderer.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules\\electron-log\\renderer.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules\\electron-log\\renderer.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules\\electron-log\\renderer.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules\\electron-log\\renderer.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules\\electron-log\\renderer.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules\\electron-log\\renderer.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules\\electron-log\\renderer.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules\\electron-log\\renderer.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules\\electron-log\\renderer.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules\\electron-log\\renderer.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules\\electron-log\\renderer.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules\\electron-log\\renderer.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules\\electron-log\\renderer.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules\\electron-log\\renderer.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules\\electron-log\\renderer.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules\\electron-log\\renderer.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules\\electron-log\\renderer.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}}],"sources":{"node_modules\\electron-log\\renderer.js":"'use strict';\n\nmodule.exports = null;\n\nvar ipcRenderer;\ntry {\n  ipcRenderer = require('electron').ipcRenderer;\n} catch (e) {\n  ipcRenderer = null;\n}\n\nvar originalConsole = require('./lib/original-console');\n\nif (ipcRenderer) {\n  module.exports = {\n    error:   log.bind(null, 'error'),\n    warn:    log.bind(null, 'warn'),\n    info:    log.bind(null, 'info'),\n    verbose: log.bind(null, 'verbose'),\n    debug:   log.bind(null, 'debug'),\n    silly:   log.bind(null, 'silly'),\n    log:     log.bind(null, 'info')\n  };\n\n  module.exports.default = module.exports;\n\n  ipcRenderer.on('__ELECTRON_LOG_RENDERER__', function(event, level, data) {\n    if (level === 'verbose') {\n      level = 'log';\n    } else if (level === 'silly') {\n      level = 'debug';\n    }\n\n    originalConsole[level].apply(\n      originalConsole.context,\n      typeof data === 'string' ? [data] : data\n    );\n  });\n}\n\nfunction log() {\n  var data = Array.prototype.slice.call(arguments);\n\n  data = data.map(function(obj) {\n    if (obj instanceof Error) {\n      obj = obj.stack || obj;\n    }\n\n    return obj;\n  });\n\n  ipcRenderer.send('__ELECTRON_LOG__', data);\n}\n"},"lineCount":54}},"hash":"f218cc6030af9b76dcdcf06b5b722430","cacheData":{"env":{}}}