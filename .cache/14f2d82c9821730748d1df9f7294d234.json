{"id":"node_modules\\electron-log\\lib\\log.js","dependencies":[{"name":"C:\\Users\\arvid\\IdeaProjects\\Shoumi\\node_modules\\electron-log\\package.json","includedInParent":true,"mtime":1536319191247},{"name":"C:\\Users\\arvid\\IdeaProjects\\Shoumi\\package.json","includedInParent":true,"mtime":1537044159153}],"generated":{"js":"// jshint -W040\n'use strict';\n\nvar LEVELS = ['error', 'warn', 'info', 'verbose', 'debug', 'silly'];\n\nmodule.exports = log;\n\nfunction log(transports, level, text) {\n  var data = Array.prototype.slice.call(arguments, 2);\n\n  var msg = {\n    data: data,\n    date: new Date(),\n    level: level\n  };\n\n  for (var i in transports) {\n    // jshint -W089\n    if (!transports.hasOwnProperty(i) || typeof transports[i] !== 'function') {\n      continue;\n    }\n\n    var transport = transports[i];\n\n    if (transport === false || !compareLevels(transport.level, level)) {\n      continue;\n    }\n\n    if (transport.level === false) continue;\n\n    transport.call(null, msg);\n  }\n}\n\nfunction compareLevels(passLevel, checkLevel) {\n  var pass = LEVELS.indexOf(passLevel);\n  var check = LEVELS.indexOf(checkLevel);\n  if (check === -1 || pass === -1) {\n    return true;\n  }\n  return check <= pass;\n}","map":{"mappings":[{"source":"node_modules\\electron-log\\lib\\log.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules\\electron-log\\lib\\log.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules\\electron-log\\lib\\log.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules\\electron-log\\lib\\log.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules\\electron-log\\lib\\log.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules\\electron-log\\lib\\log.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules\\electron-log\\lib\\log.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules\\electron-log\\lib\\log.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules\\electron-log\\lib\\log.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules\\electron-log\\lib\\log.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules\\electron-log\\lib\\log.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules\\electron-log\\lib\\log.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules\\electron-log\\lib\\log.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules\\electron-log\\lib\\log.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules\\electron-log\\lib\\log.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules\\electron-log\\lib\\log.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules\\electron-log\\lib\\log.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules\\electron-log\\lib\\log.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules\\electron-log\\lib\\log.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules\\electron-log\\lib\\log.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules\\electron-log\\lib\\log.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules\\electron-log\\lib\\log.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules\\electron-log\\lib\\log.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules\\electron-log\\lib\\log.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules\\electron-log\\lib\\log.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules\\electron-log\\lib\\log.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules\\electron-log\\lib\\log.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules\\electron-log\\lib\\log.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules\\electron-log\\lib\\log.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules\\electron-log\\lib\\log.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules\\electron-log\\lib\\log.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules\\electron-log\\lib\\log.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules\\electron-log\\lib\\log.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules\\electron-log\\lib\\log.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules\\electron-log\\lib\\log.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules\\electron-log\\lib\\log.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules\\electron-log\\lib\\log.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules\\electron-log\\lib\\log.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules\\electron-log\\lib\\log.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules\\electron-log\\lib\\log.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules\\electron-log\\lib\\log.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules\\electron-log\\lib\\log.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}}],"sources":{"node_modules\\electron-log\\lib\\log.js":"// jshint -W040\n'use strict';\n\nvar LEVELS = ['error', 'warn', 'info', 'verbose', 'debug', 'silly'];\n\nmodule.exports = log;\n\nfunction log(transports, level, text) {\n  var data = Array.prototype.slice.call(arguments, 2);\n\n  var msg = {\n    data: data,\n    date: new Date(),\n    level: level\n  };\n\n  for (var i in transports) {\n    // jshint -W089\n    if (!transports.hasOwnProperty(i) || typeof transports[i] !== 'function') {\n      continue;\n    }\n\n    var transport = transports[i];\n\n    if (transport === false || !compareLevels(transport.level, level)) {\n      continue;\n    }\n\n    if (transport.level === false) continue;\n\n    transport.call(null, msg);\n  }\n}\n\nfunction compareLevels(passLevel, checkLevel) {\n  var pass = LEVELS.indexOf(passLevel);\n  var check = LEVELS.indexOf(checkLevel);\n  if (check === -1 || pass === -1) {\n    return true;\n  }\n  return check <= pass;\n}"},"lineCount":42}},"hash":"f7fec88e9a679ab9b653cf4756a77f33","cacheData":{"env":{}}}